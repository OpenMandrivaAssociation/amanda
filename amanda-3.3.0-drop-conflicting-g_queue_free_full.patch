--- amanda-3.3.0/common-src/glib-util.c~	2011-03-30 20:45:37.000000000 +0200
+++ amanda-3.3.0/common-src/glib-util.c	2012-02-12 07:52:38.917936384 +0100
@@ -120,15 +120,6 @@ void slist_free_full(GSList * list, GDes
 }
 #endif
 
-void g_queue_free_full(GQueue * queue) {
-    while (!g_queue_is_empty(queue)) {
-        gpointer data;
-        data = g_queue_pop_head(queue);
-        amfree(data);
-    }
-    g_queue_free(queue);
-}
-
 void g_ptr_array_free_full(GPtrArray * array) {
     size_t i;
 
--- amanda-3.3.0/common-src/glib-util.h~	2011-03-30 20:45:37.000000000 +0200
+++ amanda-3.3.0/common-src/glib-util.h	2012-02-12 07:52:47.612935815 +0100
@@ -72,7 +72,6 @@ void slist_free_full(GSList * list, GDes
 
 /* These functions all take a GLib container, and call free() on all the
  * pointers in the container before free()ing the container itself. */
-void g_queue_free_full(GQueue * queue);
 void g_ptr_array_free_full(GPtrArray * array);
 
 /* g_value_compare() does what you expect. It returns TRUE if and
